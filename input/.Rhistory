Lw <- cal_rstp(energy, Temin)
b <- cal_b()
rspw <- NULL
rspw$energy <- energy/12
rspw$Lw <- Lw
write.table(x = rspw, file = "C:/Users/S158879/workspace/ProtonTransport/input/carbon_rspw", row.names = F, sep = '\t\t')
cal_rstp <- function(energy, Temin){
##  Summary of this function goes here
##   Detailed explanation goes here
I <- 72.35e-6  #mean exitation enery of water, in MeV
ne <- 3.342774e23   # for water, in 1/cm^3
re <- 2.8179403267e-13 #electron classical radius, in cm
E <- energy + mc
gamma <- E/mc
beta2 <- 1.0 - 1.0/(gamma*gamma)
Temax <- cal_Temax(energy)
Tup <- pmin(Temin, Temax)
#  plot(energy, Temax)
# density corretction, ONLY works for water
hnu <- sqrt(4*pi*ne*re^3)*me*137
C <- 1+ 2*log(I/hnu)
xa <- C/4.606
a <- 4.606*(xa - 0.2)/(2-0.2)^3
x <- log(gamma*gamma*beta2)/4.606
delta <- rep(0, length(x))
delta[x >= 0.2 & x <= 2] <- 4.606*x[x >= 0.2 & x <= 2] - C + a*(2 - x[x >= 0.2 & x <= 2])^3
delta[x > 2] <- 4.606*x[x > 2] - C
output <- 2*pi*re*re*me*ne*z*z/beta2*(log(2*me*beta2*gamma*gamma*Tup/I/I)
- beta2*(1+Tup/Temax) - delta)
return(output)
}
cal_Temax <- function(energy){
memp <- me / mc    #ratio between me and proton mass
E <- energy + mc
gamma <- E/mc
#  beta2 <- 1.0 - 1.0./(gamma.*gamma)
output <- 2*me*(gamma*gamma-1)/(1+2*gamma*memp + memp*memp)
return(output)
}
cal_b <- function(){
dTp = 0.5;
gamma <- (energy + mc)/mc
beta2 <- 1.0 - 1.0/(gamma*gamma)
C <- Lw*beta2
dE <- dTp
# semilogx(Ene,C)
dCdE <- rep(0, length(C))
dCdE[2:(length(C)-1)] <- (C[3:length(C)] - C[1:(length(C)-2)])/2/dE
dCdE[1] <- (C[2] - C[1])/dE
dCdE[length(C)] <- (C[length(C)] - C[length(C)-1])/dE
b <- energy/C*dCdE
return(b)
}
options(digits=1)
energy <- seq(from = 0.5, to = 600.0*12, by = 0.5)
Temin <- 0.1
mc <- 12*931.494061
me <- 0.510998928
z <- 6
Lw <- cal_rstp(energy, Temin)
b <- cal_b()
rspw <- NULL
rspw$energy <- energy/12
rspw$Lw <- Lw
write.table(x = rspw, file = "C:/Users/S158879/workspace/ProtonTransport/input/carbon_rspw", row.names = F, sep = '\t\t')
options(digits=8)
cal_rstp <- function(energy, Temin){
##  Summary of this function goes here
##   Detailed explanation goes here
I <- 72.35e-6  #mean exitation enery of water, in MeV
ne <- 3.342774e23   # for water, in 1/cm^3
re <- 2.8179403267e-13 #electron classical radius, in cm
E <- energy + mc
gamma <- E/mc
beta2 <- 1.0 - 1.0/(gamma*gamma)
Temax <- cal_Temax(energy)
Tup <- pmin(Temin, Temax)
#  plot(energy, Temax)
# density corretction, ONLY works for water
hnu <- sqrt(4*pi*ne*re^3)*me*137
C <- 1+ 2*log(I/hnu)
xa <- C/4.606
a <- 4.606*(xa - 0.2)/(2-0.2)^3
x <- log(gamma*gamma*beta2)/4.606
delta <- rep(0, length(x))
delta[x >= 0.2 & x <= 2] <- 4.606*x[x >= 0.2 & x <= 2] - C + a*(2 - x[x >= 0.2 & x <= 2])^3
delta[x > 2] <- 4.606*x[x > 2] - C
output <- 2*pi*re*re*me*ne*z*z/beta2*(log(2*me*beta2*gamma*gamma*Tup/I/I)
- beta2*(1+Tup/Temax) - delta)
return(output)
}
cal_Temax <- function(energy){
memp <- me / mc    #ratio between me and proton mass
E <- energy + mc
gamma <- E/mc
#  beta2 <- 1.0 - 1.0./(gamma.*gamma)
output <- 2*me*(gamma*gamma-1)/(1+2*gamma*memp + memp*memp)
return(output)
}
cal_b <- function(){
dTp = 0.5;
gamma <- (energy + mc)/mc
beta2 <- 1.0 - 1.0/(gamma*gamma)
C <- Lw*beta2
dE <- dTp
# semilogx(Ene,C)
dCdE <- rep(0, length(C))
dCdE[2:(length(C)-1)] <- (C[3:length(C)] - C[1:(length(C)-2)])/2/dE
dCdE[1] <- (C[2] - C[1])/dE
dCdE[length(C)] <- (C[length(C)] - C[length(C)-1])/dE
b <- energy/C*dCdE
return(b)
}
energy <- seq(from = 0.5, to = 600.0*12, by = 0.5)
Temin <- 0.1
mc <- 12*931.494061
me <- 0.510998928
z <- 6
Lw <- cal_rstp(energy, Temin)
b <- cal_b()
rspw <- NULL
rspw$energy <- energy/12
rspw$Lw <- Lw
write.table(x = rspw, file = "C:/Users/S158879/workspace/ProtonTransport/input/carbon_rspw", row.names = F, sep = '\t\t')
options(digits=8)
cal_rstp <- function(energy, Temin){
##  Summary of this function goes here
##   Detailed explanation goes here
I <- 72.35e-6  #mean exitation enery of water, in MeV
ne <- 3.342774e23   # for water, in 1/cm^3
re <- 2.8179403267e-13 #electron classical radius, in cm
E <- energy + mc
gamma <- E/mc
beta2 <- 1.0 - 1.0/(gamma*gamma)
Temax <- cal_Temax(energy)
Tup <- pmin(Temin, Temax)
#  plot(energy, Temax)
# density corretction, ONLY works for water
hnu <- sqrt(4*pi*ne*re^3)*me*137
C <- 1+ 2*log(I/hnu)
xa <- C/4.606
a <- 4.606*(xa - 0.2)/(2-0.2)^3
x <- log(gamma*gamma*beta2)/4.606
delta <- rep(0, length(x))
delta[x >= 0.2 & x <= 2] <- 4.606*x[x >= 0.2 & x <= 2] - C + a*(2 - x[x >= 0.2 & x <= 2])^3
delta[x > 2] <- 4.606*x[x > 2] - C
output <- 2*pi*re*re*me*ne*z*z/beta2*(log(2*me*beta2*gamma*gamma*Tup/I/I)
- beta2*(1+Tup/Temax) - delta)
return(output)
}
cal_Temax <- function(energy){
memp <- me / mc    #ratio between me and proton mass
E <- energy + mc
gamma <- E/mc
#  beta2 <- 1.0 - 1.0./(gamma.*gamma)
output <- 2*me*(gamma*gamma-1)/(1+2*gamma*memp + memp*memp)
return(output)
}
cal_b <- function(){
dTp = 0.5;
gamma <- (energy + mc)/mc
beta2 <- 1.0 - 1.0/(gamma*gamma)
C <- Lw*beta2
dE <- dTp
# semilogx(Ene,C)
dCdE <- rep(0, length(C))
dCdE[2:(length(C)-1)] <- (C[3:length(C)] - C[1:(length(C)-2)])/2/dE
dCdE[1] <- (C[2] - C[1])/dE
dCdE[length(C)] <- (C[length(C)] - C[length(C)-1])/dE
b <- energy/C*dCdE
return(b)
}
energy <- seq(from = 0.5, to = 600.0*12, by = 0.5)
Temin <- 0.1
mc <- 12*931.494061
me <- 0.510998928
z <- 6
Lw <- cal_rstp(energy, Temin)
b <- cal_b()
rspw <- NULL
rspw$energy <- energy
rspw$Lw <- Lw
write.table(x = rspw, file = "C:/Users/S158879/workspace/ProtonTransport/input/carbon_rspw", row.names = F, sep = '\t\t')
options(digits=8)
cal_rstp <- function(energy, Temin){
##  Summary of this function goes here
##   Detailed explanation goes here
I <- 72.35e-6  #mean exitation enery of water, in MeV
ne <- 3.342774e23   # for water, in 1/cm^3
re <- 2.8179403267e-13 #electron classical radius, in cm
E <- energy + mc
gamma <- E/mc
beta2 <- 1.0 - 1.0/(gamma*gamma)
Temax <- cal_Temax(energy)
Tup <- pmin(Temin, Temax)
#  plot(energy, Temax)
# density corretction, ONLY works for water
hnu <- sqrt(4*pi*ne*re^3)*me*137
C <- 1+ 2*log(I/hnu)
xa <- C/4.606
a <- 4.606*(xa - 0.2)/(2-0.2)^3
x <- log(gamma*gamma*beta2)/4.606
delta <- rep(0, length(x))
delta[x >= 0.2 & x <= 2] <- 4.606*x[x >= 0.2 & x <= 2] - C + a*(2 - x[x >= 0.2 & x <= 2])^3
delta[x > 2] <- 4.606*x[x > 2] - C
output <- 2*pi*re*re*me*ne*z*z/beta2*(log(2*me*beta2*gamma*gamma*Tup/I/I)
- beta2*(1+Tup/Temax) - delta)
return(output)
}
cal_Temax <- function(energy){
memp <- me / mc    #ratio between me and proton mass
E <- energy + mc
gamma <- E/mc
#  beta2 <- 1.0 - 1.0./(gamma.*gamma)
output <- 2*me*(gamma*gamma-1)/(1+2*gamma*memp + memp*memp)
return(output)
}
cal_b <- function(){
dTp = 0.5;
gamma <- (energy + mc)/mc
beta2 <- 1.0 - 1.0/(gamma*gamma)
C <- Lw*beta2
dE <- dTp
# semilogx(Ene,C)
dCdE <- rep(0, length(C))
dCdE[2:(length(C)-1)] <- (C[3:length(C)] - C[1:(length(C)-2)])/2/dE
dCdE[1] <- (C[2] - C[1])/dE
dCdE[length(C)] <- (C[length(C)] - C[length(C)-1])/dE
b <- energy/C*dCdE
return(b)
}
energy <- seq(from = 0.5, to = 600.0*12, by = 0.5)
Temin <- 0.1
mc <- 12*931.494061
me <- 0.510998928
z <- 6
Lw <- cal_rstp(energy, Temin)
b <- cal_b()
rspw <- NULL
rspw$energy <- energy
rspw$Lw <- Lw
write.table(format(rspw, digits=5), file = "C:/Users/S158879/workspace/ProtonTransport/input/carbon_rspw", row.names = F, sep = '\t\t')
cal_rstp <- function(energy, Temin){
##  Summary of this function goes here
##   Detailed explanation goes here
I <- 72.35e-6  #mean exitation enery of water, in MeV
ne <- 3.342774e23   # for water, in 1/cm^3
re <- 2.8179403267e-13 #electron classical radius, in cm
E <- energy + mc
gamma <- E/mc
beta2 <- 1.0 - 1.0/(gamma*gamma)
Temax <- cal_Temax(energy)
Tup <- pmin(Temin, Temax)
#  plot(energy, Temax)
# density corretction, ONLY works for water
hnu <- sqrt(4*pi*ne*re^3)*me*137
C <- 1+ 2*log(I/hnu)
xa <- C/4.606
a <- 4.606*(xa - 0.2)/(2-0.2)^3
x <- log(gamma*gamma*beta2)/4.606
delta <- rep(0, length(x))
delta[x >= 0.2 & x <= 2] <- 4.606*x[x >= 0.2 & x <= 2] - C + a*(2 - x[x >= 0.2 & x <= 2])^3
delta[x > 2] <- 4.606*x[x > 2] - C
output <- 2*pi*re*re*me*ne*z*z/beta2*(log(2*me*beta2*gamma*gamma*Tup/I/I)
- beta2*(1+Tup/Temax) - delta)
return(output)
}
cal_Temax <- function(energy){
memp <- me / mc    #ratio between me and proton mass
E <- energy + mc
gamma <- E/mc
#  beta2 <- 1.0 - 1.0./(gamma.*gamma)
output <- 2*me*(gamma*gamma-1)/(1+2*gamma*memp + memp*memp)
return(output)
}
cal_b <- function(){
dTp = 0.5;
gamma <- (energy + mc)/mc
beta2 <- 1.0 - 1.0/(gamma*gamma)
C <- Lw*beta2
dE <- dTp
# semilogx(Ene,C)
dCdE <- rep(0, length(C))
dCdE[2:(length(C)-1)] <- (C[3:length(C)] - C[1:(length(C)-2)])/2/dE
dCdE[1] <- (C[2] - C[1])/dE
dCdE[length(C)] <- (C[length(C)] - C[length(C)-1])/dE
b <- energy/C*dCdE
return(b)
}
energy <- seq(from = 0.5, to = 600.0*12, by = 0.5)
Temin <- 0.1
mc <- 12*931.494061
me <- 0.510998928
z <- 6
Lw <- cal_rstp(energy, Temin)
b <- cal_b()
rspw <- NULL
rspw$energy <- round(x = energy, digits = 7)
rspw$Lw <- round(x = Lw, digits = 9)
write.table(rspw, file = "C:/Users/S158879/workspace/ProtonTransport/input/carbon_rspw", row.names = F, sep = '\t\t')
cal_rstp <- function(energy, Temin){
##  Summary of this function goes here
##   Detailed explanation goes here
I <- 72.35e-6  #mean exitation enery of water, in MeV
ne <- 3.342774e23   # for water, in 1/cm^3
re <- 2.8179403267e-13 #electron classical radius, in cm
E <- energy + mc
gamma <- E/mc
beta2 <- 1.0 - 1.0/(gamma*gamma)
Temax <- cal_Temax(energy)
Tup <- pmin(Temin, Temax)
#  plot(energy, Temax)
# density corretction, ONLY works for water
hnu <- sqrt(4*pi*ne*re^3)*me*137
C <- 1+ 2*log(I/hnu)
xa <- C/4.606
a <- 4.606*(xa - 0.2)/(2-0.2)^3
x <- log(gamma*gamma*beta2)/4.606
delta <- rep(0, length(x))
delta[x >= 0.2 & x <= 2] <- 4.606*x[x >= 0.2 & x <= 2] - C + a*(2 - x[x >= 0.2 & x <= 2])^3
delta[x > 2] <- 4.606*x[x > 2] - C
output <- 2*pi*re*re*me*ne*z*z/beta2*(log(2*me*beta2*gamma*gamma*Tup/I/I)
- beta2*(1+Tup/Temax) - delta)
return(output)
}
cal_Temax <- function(energy){
memp <- me / mc    #ratio between me and proton mass
E <- energy + mc
gamma <- E/mc
#  beta2 <- 1.0 - 1.0./(gamma.*gamma)
output <- 2*me*(gamma*gamma-1)/(1+2*gamma*memp + memp*memp)
return(output)
}
cal_b <- function(){
dTp = 0.5;
gamma <- (energy + mc)/mc
beta2 <- 1.0 - 1.0/(gamma*gamma)
C <- Lw*beta2
dE <- dTp
# semilogx(Ene,C)
dCdE <- rep(0, length(C))
dCdE[2:(length(C)-1)] <- (C[3:length(C)] - C[1:(length(C)-2)])/2/dE
dCdE[1] <- (C[2] - C[1])/dE
dCdE[length(C)] <- (C[length(C)] - C[length(C)-1])/dE
b <- energy/C*dCdE
return(b)
}
energy <- seq(from = 0.5, to = 600.0*12, by = 0.5)
Temin <- 0.1
mc <- 12*931.494061
me <- 0.510998928
z <- 6
Lw <- cal_rstp(energy, Temin)
b <- cal_b()
rspw <- NULL
rspw$energy <- round(x = energy, digits = 7)
rspw$Lw <- round(x = Lw, digits = 9)
write.table(rspw, file = "C:/Users/S158879/workspace/ProtonTransport/input/carbon_rspw", row.names = F, sep = ',')
cal_rstp <- function(energy, Temin){
##  Summary of this function goes here
##   Detailed explanation goes here
I <- 72.35e-6  #mean exitation enery of water, in MeV
ne <- 3.342774e23   # for water, in 1/cm^3
re <- 2.8179403267e-13 #electron classical radius, in cm
E <- energy + mc
gamma <- E/mc
beta2 <- 1.0 - 1.0/(gamma*gamma)
Temax <- cal_Temax(energy)
Tup <- pmin(Temin, Temax)
#  plot(energy, Temax)
# density corretction, ONLY works for water
hnu <- sqrt(4*pi*ne*re^3)*me*137
C <- 1+ 2*log(I/hnu)
xa <- C/4.606
a <- 4.606*(xa - 0.2)/(2-0.2)^3
x <- log(gamma*gamma*beta2)/4.606
delta <- rep(0, length(x))
delta[x >= 0.2 & x <= 2] <- 4.606*x[x >= 0.2 & x <= 2] - C + a*(2 - x[x >= 0.2 & x <= 2])^3
delta[x > 2] <- 4.606*x[x > 2] - C
output <- 2*pi*re*re*me*ne*z*z/beta2*(log(2*me*beta2*gamma*gamma*Tup/I/I)
- beta2*(1+Tup/Temax) - delta)
return(output)
}
cal_Temax <- function(energy){
memp <- me / mc    #ratio between me and proton mass
E <- energy + mc
gamma <- E/mc
#  beta2 <- 1.0 - 1.0./(gamma.*gamma)
output <- 2*me*(gamma*gamma-1)/(1+2*gamma*memp + memp*memp)
return(output)
}
cal_b <- function(){
dTp = 0.5;
gamma <- (energy + mc)/mc
beta2 <- 1.0 - 1.0/(gamma*gamma)
C <- Lw*beta2
dE <- dTp
# semilogx(Ene,C)
dCdE <- rep(0, length(C))
dCdE[2:(length(C)-1)] <- (C[3:length(C)] - C[1:(length(C)-2)])/2/dE
dCdE[1] <- (C[2] - C[1])/dE
dCdE[length(C)] <- (C[length(C)] - C[length(C)-1])/dE
b <- energy/C*dCdE
return(b)
}
energy <- seq(from = 0.5, to = 600.0*12, by = 0.5)
Temin <- 0.1
mc <- 12*931.494061
me <- 0.510998928
z <- 6
Lw <- cal_rstp(energy, Temin)
b <- cal_b()
rspw <- NULL
rspw$energy <- energy
rspw$Lw <- x = Lw
write.table(rspw, file = "C:/Users/S158879/workspace/ProtonTransport/input/carbon_rspw", row.names = F, sep = '\t\t')
cal_rstp <- function(energy, Temin){
##  Summary of this function goes here
##   Detailed explanation goes here
I <- 72.35e-6  #mean exitation enery of water, in MeV
ne <- 3.342774e23   # for water, in 1/cm^3
re <- 2.8179403267e-13 #electron classical radius, in cm
E <- energy + mc
gamma <- E/mc
beta2 <- 1.0 - 1.0/(gamma*gamma)
Temax <- cal_Temax(energy)
Tup <- pmin(Temin, Temax)
#  plot(energy, Temax)
# density corretction, ONLY works for water
hnu <- sqrt(4*pi*ne*re^3)*me*137
C <- 1+ 2*log(I/hnu)
xa <- C/4.606
a <- 4.606*(xa - 0.2)/(2-0.2)^3
x <- log(gamma*gamma*beta2)/4.606
delta <- rep(0, length(x))
delta[x >= 0.2 & x <= 2] <- 4.606*x[x >= 0.2 & x <= 2] - C + a*(2 - x[x >= 0.2 & x <= 2])^3
delta[x > 2] <- 4.606*x[x > 2] - C
output <- 2*pi*re*re*me*ne*z*z/beta2*(log(2*me*beta2*gamma*gamma*Tup/I/I)
- beta2*(1+Tup/Temax) - delta)
return(output)
}
cal_Temax <- function(energy){
memp <- me / mc    #ratio between me and proton mass
E <- energy + mc
gamma <- E/mc
#  beta2 <- 1.0 - 1.0./(gamma.*gamma)
output <- 2*me*(gamma*gamma-1)/(1+2*gamma*memp + memp*memp)
return(output)
}
cal_b <- function(){
dTp = 0.5;
gamma <- (energy + mc)/mc
beta2 <- 1.0 - 1.0/(gamma*gamma)
C <- Lw*beta2
dE <- dTp
# semilogx(Ene,C)
dCdE <- rep(0, length(C))
dCdE[2:(length(C)-1)] <- (C[3:length(C)] - C[1:(length(C)-2)])/2/dE
dCdE[1] <- (C[2] - C[1])/dE
dCdE[length(C)] <- (C[length(C)] - C[length(C)-1])/dE
b <- energy/C*dCdE
return(b)
}
energy <- seq(from = 0.5, to = 600.0*12, by = 0.5)
Temin <- 0.1
mc <- 12*931.494061
me <- 0.510998928
z <- 6
Lw <- cal_rstp(energy, Temin)
b <- cal_b()
rspw <- NULL
rspw$energy <- energy
rspw$Lw <- Lw
write.table(rspw, file = "C:/Users/S158879/workspace/ProtonTransport/input/carbon_rspw", row.names = F, sep = '\t\t')
cal_sigma_ion <- function(energy, ne, Temin){
re <- 2.8179403267e-13 #electron classical radius, in cm
me <- 0.510998928  #electron mass, in MeV
mc <- 12*931.494061
z <- 6
E <- energy + mc
gamma <- E/mc
beta2 <- 1.0 - 1.0/(gamma*gamma)
Temax <- cal_Temax(energy)
#    plot(energy, Temax)
output <- 2*pi*re*re*me*ne*z*z/beta2*((-1.0/Temax - beta2/Temax*log(Temax) + Temax/2/(E*E))
- (-1.0/Temin - beta2/Temax*log(Temin) + Temin/2/(E*E)) )
output[Temax <= Temin] = 0
return(output)
}
cal_Temax <- function(energy){
me <- 0.510998928
mc <- 12*931.494061
memp <- me / mc    #ratio between me and proton mass
E <- energy + mc
gamma <- E/mc
#  beta2 <- 1.0 - 1.0./(gamma.*gamma)
output <- 2*me*(gamma*gamma-1)/(1+2*gamma*memp + memp*memp)
return(output)
}
energy <- seq(from = 0.5, to = 600.0**12, by = 0.5)
Temin <- 0.1
mc <- 12*931.494061
me <- 0.510998928
z <- 6
ne <- 3.342774e23
sigma <- NULL
sigma$energy <- energy
sigma$sigIon <- cal_sigma_ion(energy = energy, ne = ne, Temin = Temin)
#sigma$sigPPE <- 0
#sigma$sigPOE <- 0
#sigma$sigPOI <- 0
write.table(x = sigma, file = "C:/Users/S158879/workspace/ProtonTransport/input/carbon_crossSection", row.names = F, sep = '\t\t')
